components:
  props:
    id:
      description: 'Document unique id from database'
      type: string
    email:
      description: 'User email. Used also as login'
      type: string
      format: email
      maxLength: 24
    password:
      description: 'User password'
      type: string
      format: password
      minLength: 8
      maxLength: 24
    isActive:
      description: 'User account is active (in creating user, default: false)'
      type: boolean
    isBanned:
      description: 'User account is banned in event (default: false)'
      type: boolean
    userEvents:
      description: 'List of events that user participle'
      type: array
      items:
        type: object
        properties:
          eventId:
            $ref: '#/components/props/eventId'
          eventName:
            $ref: '#/components/props/eventName'
          teamId:
            $ref: '#/components/props/teamId'
          teamName:
            $ref: '#/components/props/teamName'
          role:
            $ref: '#/components/props/role'
          isBanned:
            $ref: '#/components/props/isBanned'
    error:
      description: 'Error code name'
      type: number
      length: 4
    message:
      description: 'Error text name'
      type: string
    errorDetails:
      description: 'Validation details'
      type: object
    success:
      description: 'Field describe status of operation'
      type: boolean
      nullable: false
    role:
      description: 'Describe permissions in app'
      type: string
    eventId:
      description: 'Event id'
      type: string
    eventName:
      description: 'Event name'
      type: string
    eventKey:
      description: 'Event access key'
      type: string
    eventDuration:
      type: object
      properties:
        startDate:
          description: 'Time when event start'
          type: number
          nullable: true
        endDate:
          description: 'Time when event end'
          type: number
          nullable: true
    mapProperties:
      type: object
      properties:
        zoom:
          description: 'Default map zoom for user'
          type: number
        longitude:
          description: 'Default map longitude for user'
          type: number
        latitude:
          description: 'Default map latitude for user'
          type: number
    eventRefreshTime:
      description: 'Refresh time(in seconds) of map with points'
      type: number
    teamId:
      description: 'Team id'
      type: string
    teamName:
      description: 'Team name'
      type: string
    collectedPoints:
      description: 'List of collected points (pointsId)'
      type: array
      items:
        type: string
    teamMembers:
      description: 'List of members in team'
      type: array
      items:
        type: object
        properties:
          email:
            $ref: '#/components/props/email'
          userId:
            $ref: '#/components/props/id'
          role:
            $ref: '#/components/props/role'  
    teamLeader:
      description: 'Id of user that have to be leader of team'
      type: string
    pointId:
      description: 'Point id'
      type: string
    pointKey:
      description: 'Point key to collect. Nullable if user have no permission to key'
      type: string
      nullable: true
    pointName:
      description: 'Point name'
      type: string
    pointCollectedDate:
      description: 'Date when point was collected. Can be null'
      type: string
      nullable: true
    pointPosition:
      description: 'Point position on map'
      type: object
      properties:
        longitude:
          type: number
        latitude:
          type: number
    pointDuration:
      description: 'Start and end time when point is available'
      type: object
      properties:
        startDate:
          description: 'Time when point start to be available. If null, point exist from start of event'
          type: number
          default: null
          nullable: true
        endDate:
          description: 'Time when point end to be available. If null, point exist to end of event'
          type: number
          default: null
          nullable: true
    categoryId:
      description: 'Category id'
      type: string
    categoryName:
      description: 'Category name'
      type: string
    pointType:
      description: 'Point type'
      type: string
    pointValue:
      description: 'Point category value'
      type: number
    pointShape:
      description: 'Point category shape'
      type: string
    team:
      type: string
      nullable: true  
        